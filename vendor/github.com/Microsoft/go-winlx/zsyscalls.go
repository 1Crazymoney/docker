// MACHINE GENERATED BY 'go generate' COMMAND; DO NOT EDIT

package winlx

import (
	"syscall"
	"unsafe"

	"golang.org/x/sys/windows"
)

var _ unsafe.Pointer

var (
	modntposixapi = windows.NewLazySystemDLL("C:\\gopath\\bin\\ntposixapi.dll")

	procLxCreat = modntposixapi.NewProc("LxCreat")
	procLxOpen  = modntposixapi.NewProc("LxOpen")
	procLxLink  = modntposixapi.NewProc("LxLink")
	procLxClose = modntposixapi.NewProc("LxClose")
	procLxRead  = modntposixapi.NewProc("LxRead")
	procLxWrite = modntposixapi.NewProc("LxWrite")
)

func LxCreat(name *uint16, mode uint32, info *CreateInfo, handle *syscall.Handle) (status NtStatus) {
	r0, _, _ := syscall.Syscall6(procLxCreat.Addr(), 4, uintptr(unsafe.Pointer(name)), uintptr(mode), uintptr(unsafe.Pointer(info)), uintptr(unsafe.Pointer(handle)), 0, 0)
	status = NtStatus(r0)
	return
}

func LxOpen(name *uint16, flags uint32, mode uint32, info *CreateInfo, handle *syscall.Handle) (status NtStatus) {
	r0, _, _ := syscall.Syscall6(procLxOpen.Addr(), 5, uintptr(unsafe.Pointer(name)), uintptr(flags), uintptr(mode), uintptr(unsafe.Pointer(info)), uintptr(unsafe.Pointer(handle)), 0)
	status = NtStatus(r0)
	return
}

func LxLink(oldName *uint16, newName *uint16) (status NtStatus) {
	r0, _, _ := syscall.Syscall(procLxLink.Addr(), 2, uintptr(unsafe.Pointer(oldName)), uintptr(unsafe.Pointer(newName)), 0)
	status = NtStatus(r0)
	return
}

func LxClose(handle syscall.Handle) (status NtStatus) {
	r0, _, _ := syscall.Syscall(procLxClose.Addr(), 1, uintptr(handle), 0, 0)
	status = NtStatus(r0)
	return
}

func LxRead(handle syscall.Handle, buf []byte, bytesRead *uint32) (status NtStatus) {
	var _p0 *byte
	if len(buf) > 0 {
		_p0 = &buf[0]
	}
	r0, _, _ := syscall.Syscall6(procLxRead.Addr(), 4, uintptr(handle), uintptr(unsafe.Pointer(_p0)), uintptr(len(buf)), uintptr(unsafe.Pointer(bytesRead)), 0, 0)
	status = NtStatus(r0)
	return
}

func LxWrite(handle syscall.Handle, buf []byte, bytesWritten *uint32) (status NtStatus) {
	var _p0 *byte
	if len(buf) > 0 {
		_p0 = &buf[0]
	}
	r0, _, _ := syscall.Syscall6(procLxWrite.Addr(), 4, uintptr(handle), uintptr(unsafe.Pointer(_p0)), uintptr(len(buf)), uintptr(unsafe.Pointer(bytesWritten)), 0, 0)
	status = NtStatus(r0)
	return
}
